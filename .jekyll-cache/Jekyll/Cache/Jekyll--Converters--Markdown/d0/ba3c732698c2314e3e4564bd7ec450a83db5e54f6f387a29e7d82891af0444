I"¯
<p>I was recently working on an iOS application which requires push notifications. It is a not-so-pleasurable experience for any developer to configure the backend of the application to send push notifications. The general reasons for this displeasure are due to device/token management on the server and worker processes on the server which should send the notifications without blocking the main thread.</p>

<p>I recently bumped upon <a href="http://zeropush.com">ZeroPush</a> which relieves the developer of both of these pain points. The implementation of ZeroPush for push notifications was very easy both on the client and server side.
<!-- more -->
####Device/Token management:
ZeroPush takes care of registering the device to the Appleâ€™s Push notification. If you wish not to undergo the pain of token management <em>at</em> <em>all</em>, using ZeroPush named channels where the user can listen to notifications can be created and listened to. This gives a breath of fresh air to the developers who loves to save a lot of time.</p>

<p>####Push notification management:
On the server side, (in my case, a rails application in Heroku), integrating ZeroPush was easy with their gem. Once their gem is added, the notifications can be sent by creating a hash table with the necessary parameters:</p>
<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">ZeroPush</span><span class="p">.</span><span class="nf">notify</span><span class="p">({</span>
	<span class="ss">device_token: </span><span class="p">[</span><span class="s1">'token1'</span><span class="p">,</span> <span class="s1">'token2'</span><span class="p">],</span>
	<span class="ss">alert: </span><span class="s1">'This is a notification'</span><span class="p">,</span>
	<span class="ss">badge: </span><span class="mi">1</span><span class="p">,</span>
	<span class="ss">sound: </span><span class="s2">"default"</span><span class="p">,</span>
	<span class="ss">info: </span><span class="p">{</span>
		<span class="s1">'use'</span><span class="p">:</span> <span class="s1">'Anyother information that needs to be sent to the device along with the payload'</span>
	<span class="p">}</span>
<span class="p">})</span>
</code></pre></div></div>
<p>[Yes, I still went with tokens than using channels :(] This makes a rest call to the ZeroPush server which takes care of the notifications. But for ZeroPush, I might have ended up writing SideKiq worker processes, backed by Redis which definitely is not as easy as this.</p>

<p>ZeroPush comes at a very small price (starting at $10 per month), but it is definitely much cheaper than installing SideKiq/Redis on Heroku and, not to mention, the effort involved.</p>
:ET